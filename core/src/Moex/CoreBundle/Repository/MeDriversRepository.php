<?php

namespace Moex\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;


/**
 * MeDriversRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MeDriversRepository extends EntityRepository
{
    public function findByFilterQuery(\Moex\CoreBundle\Entity\DriverFilter $filter)
    {
        $query = $this->createQueryBuilder('o')
                              ->where('1 = 1');

        if ($filter->getPhone() != null) {
            $query = $query->andWhere('o.phone LIKE :phone')
                            ->setParameter('phone', $filter->getPhone()."%");
        }

        if ($filter->getPosition() != null) {
            $query = $query->andWhere('o.position LIKE :position')
                            ->setParameter('position', $filter->getPostion()."%");
        }

        if ($filter->getDriverName() != null) {
            $query = $query->andWhere('o.driverName LIKE :drivername')
                            ->setParameter('drivername', $filter->getDriverName()."%");
        }

        if ($filter->getDriverInfo() != null) {
            $query = $query->andWhere('o.driverInfo LIKE :driverinfo')
                            ->setParameter('driverinfo', $filter->getDriverInfo()."%");
        }

        return $query->getQuery();
    }

	public function findByDistance($latitude, $longitude){
		$em = $this->getEntityManager();
		$rsm = new ResultSetMapping;
		$rsm->addEntityResult('Moex\CoreBundle\Entity\MeDrivers', 'd');
		$rsm->addFieldResult('d','id','id');
		$rsm->addFieldResult('d','lat','lat');
		$rsm->addFieldResult('d','lng','lng');
		$rsm->addFieldResult('d','phone','phone');
		$rsm->addFieldResult('d','driverName','driverName');
		$rsm->addFieldResult('d','position','position');
		$rsm->addScalarResult('distance','distance');
		$sql = 'SELECT id AS id, lat AS lat, lng AS lng, phone AS phone, driver_name AS driverName, position AS position,'
			.' (((ACOS(SIN('.$latitude.' * PI() / 180) * SIN(lat * PI() / 180)'
			.' + COS('.$latitude.' * PI() / 180) * COS(lat * PI() / 180)'
			.' * COS(('.$longitude.' - lng) * PI() / 180))* 180 / PI())'
			.' * 60 * 1.1515)*1.609344) AS distance'
			.' FROM me_drivers d GROUP BY id HAVING distance < 10'
			.' ORDER BY distance ASC';
		return $em->createNativeQuery($sql, $rsm)->getResult();
	}
}
