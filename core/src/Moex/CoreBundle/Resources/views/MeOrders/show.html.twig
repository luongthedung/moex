{% extends "MoexCoreBundle::layout.html.twig" %}
{% block moex_content %}
<div class="content-container">
<div class="left-part-container rate50">
	<div class="left-part">
		<div class="admin-header"><span>{{ entity.phone }}</span>
			<div class="contextual"> 
				<a href="{{ path('order_new') }}" class="icon icon-add">{{ "action_new" | trans }}</a> 
				<a href="{{ path('order_delete', { 'id': entity.id }) }}" class="icon icon-del">{{ "action_delete" | trans }}</a> 
				<a href="{{ path('order_edit', { 'id': entity.id }) }}" class="icon icon-edit">{{ "action_edit" | trans }}</a>
				<a href="{{ path('order') }}" class="icon icon-back">{{ "action_backtolist" | trans }}</a>
			</div>
		</div>

		<table class="record-properties" cellspacing="0">
			<tbody>
				<tr class="even">
					<th class="label">{{ "order_orderfrom" | trans }}</th>
					<td class="value">{{ entity.orderFrom }}</td>
				</tr>
				<tr class="odd">
					<th class="label">{{ "order_orderto" | trans }}</th>
					<td class="value">{{ entity.orderTo }}</td>
				</tr>
				<tr class="even">
					<th class="label">{{ "order_orderinfo" | trans }}</th>
					<td class="value">{{ entity.orderInfo }}</td>
				</tr>
				<tr class="odd">
					<th class="label">{{ "order_phone" | trans }}</th>
					<td class="value">{{ entity.phone }}</td>
				</tr>
				<tr class="even">
					<th class="label">{{ "order_price" | trans }}</th>
					<td class="value">{{ entity.price }}</td>
				</tr>
				<tr class="odd">
					<th class="label">{{ "order_createdat" | trans }}</th>
					<td class="value">{{ entity.createdAt|date('Y-m-d H:i:s') }}</td>
				</tr>
				<tr class="even">
					<th class="label">{{ "order_updatedat" | trans }}</th>
					<td class="value">{{ entity.updatedAt|date('Y-m-d H:i:s') }}</td>
				</tr>
			</tbody>
		</table>

		<table class="list records-list" cellspacing="0">
			<thead>
				<tr>
					<th class="spec">{{ "table_id" | trans }}</th>
					<th>{{ "driver_phone" | trans }}</th>
					<th>{{ "driver_name" | trans }}</th>
					<th>{{ "driver_position" | trans }}</th>
					<th>{{ "driver_distance" | trans }}</th>
				</tr>
			</thead>
			<tbody>
			{% for value in drivers %}
			{% set en = value[0] %}
			{% set distance = value['distance'] %}
				<tr class="{{ cycle(['odd', 'even'], loop.index) }}">
					<td class="spec">{{ en.id }}</td>
					<td class="phone">{{ en.phone }}</td>
					<td class="name">{{ en.driverName }}</td>
					<td class="position">{{ en.position | cut(20) }}</td>
					<td>{{ '%.2f' | format(distance) }}</td>
				</tr>
			{% else %}
				<tr>
					<td>{{ "message_record_not_found" | trans }}</td>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
			{% endfor %}
			</tbody>
		</table>
		</div>
	</div>
	<div class="right-part-container rate50">
		<div class="right-part">
			<div id="map"></div>
		</div>
	</div>
</div>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false&dirflg=r"></script>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
<script type="text/javascript" src="{{ asset ('js/jquery.min.js') }}"></script>
<script type="text/javascript" src="{{ asset ('js/mescript.js') }}"></script>

<script type="text/javascript">
var request = {
    origin: '{{ entity.orderFrom }}', 
    destination: '{{ entity.orderTo }}',
    travelMode: google.maps.DirectionsTravelMode.WALKING
};
var distance = 0;
var submit_click = false;
var directionsService = new google.maps.DirectionsService();
var directionsDisplay = new google.maps.DirectionsRenderer();

var geocoder = new google.maps.Geocoder();
var json = [ 
	{% for value in drivers %}
	{% set en = value[0] %}
	{
		"title": "{{ en.driverName }}",
		"lat": "{{ en.lat }}",
		"lng": "{{ en.lng }}",
		"description": "{{en.driverName }} - {{ en.phone }} <br /> {{ en.driverInfo }}",
	},
	{% endfor %}
]
$(document).ready(function(){
	var myOptions = {
		center: new google.maps.LatLng({{ entity.lat }},{{ entity.lng }}),
		zoom: 10,
		mapTypeId: google.maps.MapTypeId.ROADMAP
	}
	var map = new google.maps.Map(document.getElementById("map"), myOptions);
   	directionsDisplay = new google.maps.DirectionsRenderer({
		'draggable': false,
	});
	directionsDisplay.setMap(map);
    directionsService.route(request, function(response, status) {
		if (status == google.maps.DirectionsStatus.OK) {
			directionsDisplay.setDirections(response);
		}
    });
	map.setZoom(4);

	var infoWindow = new google.maps.InfoWindow();
	for (var i = 0, length = json.length; i < length; i++) {
	  	var data = json[i],
		  	latLng = new google.maps.LatLng(data.lat, data.lng); 

	  	var marker = new google.maps.Marker({
			position: latLng,
			map: map,
			title: data.title
	  	});
		(function(marker, data) {
			google.maps.event.addListener(marker, "mouseover", function(e) {
				infoWindow.setContent(data.description);
				infoWindow.open(map, marker);
			});
		})(marker, data);
	}
});
</script>
{% endblock moex_content %}
